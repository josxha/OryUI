/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Ory.Kratos.Client.Client.OpenAPIDateConverter;

namespace Ory.Kratos.Client.Model
{
    /// <summary>
    /// ContinueWithRecoveryUiFlow
    /// </summary>
    [DataContract(Name = "continueWithRecoveryUiFlow")]
    public partial class ContinueWithRecoveryUiFlow : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContinueWithRecoveryUiFlow" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ContinueWithRecoveryUiFlow() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ContinueWithRecoveryUiFlow" /> class.
        /// </summary>
        /// <param name="id">The ID of the recovery flow (required).</param>
        /// <param name="url">The URL of the recovery flow.</param>
        public ContinueWithRecoveryUiFlow(string id = default(string), string url = default(string))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for ContinueWithRecoveryUiFlow and cannot be null");
            }
            this.Id = id;
            this.Url = url;
        }

        /// <summary>
        /// The ID of the recovery flow
        /// </summary>
        /// <value>The ID of the recovery flow</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The URL of the recovery flow
        /// </summary>
        /// <value>The URL of the recovery flow</value>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContinueWithRecoveryUiFlow {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
