@model RegistrationModel
@{
    ViewData["Title"] = OryTranslator.Get("registration.title");
    Layout = "_CardLayout";
}

<h1 class="title has-text-centered">@OryTranslator.Get("registration.title")</h1>
<p class="has-text-centered">
    @OryTranslator.Get("registration.login-label")
    <a href="@Model.loginUrl">
        @OryTranslator.Get("registration.login-button")
    </a>
</p>
<hr/>
<div class="mb-2">
    @await Component.InvokeAsync("KratosUiTextMessages", Model.flow.Ui.Messages)

    @await Component.InvokeAsync("KratosUiComponent", new KratosUiArgs(
        Model.flow.Ui,
        FlowType.Registration,
        hiddenGroups: [KratosUiNode.GroupEnum.Oidc]))
</div>

@{
    var nodes = Model.flow.Ui.Nodes.Where(node => node.Group == KratosUiNode.GroupEnum.Oidc);
}

<div class="field separator">@CustomTranslator.Get("login.signInWithProvider")</div>
<form class="mb-3" action="@Model.flow.Ui.Action" method="@Model.flow.Ui.Method">
    <div class="field">
        <div class="columns is-mobile is-multiline">
            @foreach (var node in nodes)
            {
                @await Component.InvokeAsync("KratosUiNodeComponent", new KratosUiNodeArgs(
                    node, FlowType.Login))
            }
        </div>
    </div>
</form>