@model LoginModel
@{
    ViewData["Title"] = OryTranslator.Get("login.title");
    Layout = "_CardLayout";
    var is2Fa = Model.flow.Ui.Messages?.All(text => text.Id == 1010004) ?? false;
}

<h1 class="title has-text-centered">@OryTranslator.Get("login.title")</h1>
@if (is2Fa)
{
    <p class="has-text-centered mt-3">
        @OryTranslator.Get("login.logout-label") <a href="">@OryTranslator.Get("login.logout-button")</a>
    </p>
} else
{
    <p class="has-text-centered">
        @OryTranslator.Get("login.registration-label")
        <a href="@Model.signupUrl">
            @OryTranslator.Get("login.registration-button")
        </a>
    </p>
}
<hr/>
<div class="mb-2">
    @await Component.InvokeAsync("KratosUiTextMessages", Model.flow.Ui.Messages)

    @await Component.InvokeAsync("KratosUiComponent", new KratosUiArgs(
               Model.flow.Ui,
               FlowType.Login,
               Model.forgotPasswordUrl))
</div>

@if (!is2Fa)
{
    <!--<div class="field separator">Or sign in with</div>
    <div class="field">
        <div class="columns is-mobile is-multiline">
            @for (var i = 0; i < 1; i++)
            {
                <div class="column is-one-third">
                    <a class="button is-fullwidth">
                        <span class="icon">
                            <i class="fab fa-google"></i>
                        </span>
                        <span>Google</span>
                    </a>
                </div>
            }
        </div>
    </div>-->
}