/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Kratos.Client.Model;
using Ory.Kratos.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Kratos.Client.Test.Model
{
    /// <summary>
    ///  Class for testing SessionAuthenticationMethod
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SessionAuthenticationMethodTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SessionAuthenticationMethod
        //private SessionAuthenticationMethod instance;

        public SessionAuthenticationMethodTests()
        {
            // TODO uncomment below to create an instance of SessionAuthenticationMethod
            //instance = new SessionAuthenticationMethod();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SessionAuthenticationMethod
        /// </summary>
        [Fact]
        public void SessionAuthenticationMethodInstanceTest()
        {
            // TODO uncomment below to test "IsType" SessionAuthenticationMethod
            //Assert.IsType<SessionAuthenticationMethod>(instance);
        }

        /// <summary>
        /// Test the property 'Aal'
        /// </summary>
        [Fact]
        public void AalTest()
        {
            // TODO unit test for the property 'Aal'
        }

        /// <summary>
        /// Test the property 'CompletedAt'
        /// </summary>
        [Fact]
        public void CompletedAtTest()
        {
            // TODO unit test for the property 'CompletedAt'
        }

        /// <summary>
        /// Test the property 'Method'
        /// </summary>
        [Fact]
        public void MethodTest()
        {
            // TODO unit test for the property 'Method'
        }

        /// <summary>
        /// Test the property 'Organization'
        /// </summary>
        [Fact]
        public void OrganizationTest()
        {
            // TODO unit test for the property 'Organization'
        }

        /// <summary>
        /// Test the property 'Provider'
        /// </summary>
        [Fact]
        public void ProviderTest()
        {
            // TODO unit test for the property 'Provider'
        }
    }
}
